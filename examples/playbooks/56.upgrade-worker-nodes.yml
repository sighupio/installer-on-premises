- name: Kubernetes node preparation
  hosts: nodes
  become: true
  vars:
    skip_kubelet_upgrade: True
  roles:
    - kube-node-common
  tags:
    - kube-node-common

- name: Kubernetes drain
  hosts: nodes
  tasks:
    - name: Get node name
      set_fact:
        node_name: "{{ kubernetes_hostname }}"
    - name: Drain node
      delegate_to: localhost
      shell: "kubectl drain --grace-period=60 --timeout=360s --force --ignore-daemonsets --delete-emptydir-data {{ node_name }} --kubeconfig={{ kubernetes_kubeconfig_path }}{{ admin_kubeconfig_filename }}"

- name: Kubernetes kubeadm upgrade node
  hosts: nodes
  become: true
  tasks:
    - name: Upgrade kubelet config
      shell: "kubeadm upgrade node"
    - name: Check that the kubeletconfiguration.yaml exists
      stat:
        path: /var/lib/kubelet/kubelet-config/patches/kubeletconfiguration.yaml
      register: kubeletconfiguration_result
    - name: Apply kubelet patches
      shell: "kubeadm upgrade node phase kubelet-config --patches /var/lib/kubelet/kubelet-config/patches/"
      when: kubeletconfiguration_result.stat.exists

- name: Kubelet and Containerd upgrade
  hosts: nodes
  become: true
  vars:
    skip_kubelet_upgrade: False
  roles:
    - kube-node-common
    - containerd
  tags:
    - kube-node-common
    - containerd

- name: Kubernetes uncordon node
  hosts: nodes
  tasks:
    - name: Get node name
      set_fact:
        node_name: "{{ kubernetes_hostname }}"
    - name: Uncordon node
      delegate_to: localhost
      shell: "sleep 60 && kubectl uncordon {{ node_name }} --kubeconfig={{ kubernetes_kubeconfig_path }}{{ admin_kubeconfig_filename }}"
